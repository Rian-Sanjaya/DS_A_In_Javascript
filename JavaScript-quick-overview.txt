CONTROL STRUCTURES

===================================================================================================================
CONDITIONAL STATEMENTS

1.
if (expression) {
	// statement
} else if (expression) {
	// statement
} else {
	// statement
}

2.
expression ? // trurth statement : // false statement

3.
var month = 5;
switch (month) {
	case 1:
		// statement
		break;
	case 2:
		// statement
		break;
	case 3:
		// statement
		break;
	default:
		// statement
}

===================================================================================================================
LOOP

1. 
for (var i=0; i<10; i++) {
	// statement
}

2.
var i = 0;
while (i<10) {
	// statement
	i++;
}

3. 
var i = 0;
do {
	// statement
	i++;
} while (i<10)

===================================================================================================================
FUNCTION

ASSIGN DEFAULT VALUE TO PARAMETER

function sum(x, y, z) {
	x = x || 1;
	y = y || 2;
	z = z || 3;

	return x + y + z;	
}

===================================================================================================================
OBJECT ORIENTED PROGRAMMING

CREATING OBJECT

1.
var obj = new Object();

2.
var obj = {};

3.
var obj  = {
	name: {
		first: 'Gandalf',
		last: 'the Grey'
	},
	address: 'Middle Earth'
}


DECLARE A CLASS

function Book(title, pages, isbn) {
	this.title = title;
	this.page = page;
	this.isbn = isbn;

	this.printIsbn = function() {
		console.log(this.isbn);
	}
}

INSTANTIATE AN OBJECT

var book = new Book('title', 'pag', 'isbn');

console.log(book.title);	// output the book title
book.title = 'new title'	// updates the value of the book title
book.printIsbn();

DECLARE A METHOD FOR THE BOOK CLASS

Book.prototype.printTitle = function() {
	console.log(this.title);
};
book.printTitle();

===================================================================================================================
ARRAY

DECLARING AND INITIALIZING

var daysOfWeek = new Array();
var daysOfWeek = new Array(7);
var daysOfWeek = new Array('Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday');

var daysOfWeek = [];
var daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];


ADDING NEW ELEMENT TO END OF ARRAY

var numbers = [0, 1, 2]

numbers.push(11);
numbers.push(12, 13);


INSERTING NEW ELEMENT IN THE FIRST POSITION

numbers.unshift(-1);
numbers.unshift(-3, -2);


REMOVING ELEMENTS

FROM THE END OF ARRAY

numbers.pop();


FROM THE BEGINING OF ARRAY

numbers.shift();


ADDING AND REMOVING ELEMENTS FROM A SPECIFIC POSITION

1.
numbers.splice(1, 2);	// remove 2 elements starting from index 1

2.
numbers.splice(1, 0, 1, 2)	// insert numbers 1 and 2 starting from index 1

3.
numbers.splice(1, 2, 1, 2)	// removing 2 elements and inserting number 1 and 2 starting from index 1


TWO DIMENTIONAL AND MULTI DIMENTIONAL ARRAYS

TWO DIMENTIONAL

var averageTemp = [];
averageTemp[0] = [72, 75, 79, 79, 81, 81];
averageTemp[1] = [81, 79, 75, 75, 73, 72];


MULTI DIMENTIONAL

var matrix3x3x3 = [];
for (var i=0; i<3; i++) {
	matrix3x3x3[i] = [];
	for (var j=0; j<3; j++) {
		matrix3x3x3[i][j] = [];
		for (var k=0; k<3; k++) {
			matrix3x3x3[i][j][k] = i+j+k;
		}
	}
}

// iterating 
for (var i=0; i<matrix3x3x3.length; i++) {
	for (var j=0; j<matrix3x3x3[i].length; j++) {
		for (var k=0; k<matrix3x3x3[i][j].length; k++) {
			console.log(matrix3x3x3[i][j][k]);
		}
	}
}


ARRAY FUNCTIONS

var numbers = [1, 2, 3, 4, 5];

FILTER

numbers.filter(function(item, index, array) {
	return (item % 2) === 0;
});
// [2, 4]


MAP

numbers.map( function(item, index, array) {
	return item * item;
} );
// [1, 4, 9, 16, 25]


REDUCE

numbers.reduce( function(previous, current, index, array) {
	return previous + current;	
} );
// 15

===================================================================================================================
BUILD IN FUNCTIONS

STRING

1.
'abcde'.slice(1)		// 'bcde'
'abcde'.slice(1, 3)		// 'bc'

2.
'abcde'.charAt(0)		// 'a'

3.
'abcde'.charCodeAt(0) 	// 97

4.
'abcde'.indexOf('c')	// 2

5.
var str = 'A quick brown fox jumped over the lazy dog'
str.replace('jumped', 'leaped')
// => 'A quick brown fox leaped over the lazy dog'
